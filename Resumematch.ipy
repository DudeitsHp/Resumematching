import gradio as gr
import docx2txt
import warnings
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity
warnings.filterwarnings('ignore')

# load the data
resume = docx2txt.process('data/resumedata/Vignesh R.docx')
job = docx2txt.process('data/JD.docx')   

text = [resume, job]

def transform(text):
    cv = CountVectorizer()
    count_matrix = cv.fit_transform(text)     # Transforming the text into matrix
# get the percentage
    matchpercentage = cosine_similarity(count_matrix)[0][1]
    matchpercentage = round(matchpercentage*100,2)
    return matchpercentage

input_1 = gr.inputs.File(file_count="single", type="file", label= 'Upload the Resume (.pdf)', optional=False)
input_2 = gr.inputs.File(file_count="single", type="file", label= 'Upload the Job Description (.txt)', optional=False)

title = "Resume Screener"
description = "Upload your resume(.pdf) and the job description(.txt) and let the sentence similarity model display the similarity percentage !!!"

iface = gr.Interface( 
    transform,
    [input_1, input_2], "label", title = title, description = description)

if __name__ == "__main__":
    iface.launch()